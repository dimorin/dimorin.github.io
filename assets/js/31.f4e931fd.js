(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{201:function(t,e,r){"use strict";r.r(e);var a=r(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://git-scm.com/download/mac",target:"_blank",rel:"noopener noreferrer"}},[t._v("OS X용 git 다운로드"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://gitforwindows.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Windows용 git 다운로드"),r("OutboundLink")],1)])]),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("여러분의 로컬 저장소는 git이 관리하는 세 그루의 나무로 구성돼있어요.")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),r("p",[t._v("기존 프로젝트를 Git으로 관리하고 싶을 때, 프로젝트의 디렉토리로 이동해서 아래과 같은 명령을 실행합니다.")]),t._v(" "),t._m(7),r("p",[t._v("이 명령은 .git이라는 하위 디렉토리를 만든다.\n.git 디렉토리에는 저장소에 필요한 뼈대 파일(Skeleton)이 들어 있 이 명령만으로는 아직 프로젝트의 어떤 파일도 관리하지는 않습니다.\n즉, 새로운 git 저장소가 만들어집니다.\nGit이 파일을 관리하게 하려면 저장소에 파일을 추가하고 커밋해야 합나다. git add 명령으로 파일을 추가하고 커밋합니다.")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),r("p",[t._v("변경된 파일은 아래 명령어로 (인덱스에) 추가할 수 있어요.")]),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),r("p",[t._v("파일의 상태를 확인할 수 있습니다.")]),t._v(" "),t._m(21),r("p",[t._v("git commit 명령을 실행할 때 -a 옵션을 추가하면 Git은 Tracked 상태의 파일을 자동으로 Staging Area에 넣습니다. 그래서 git add 명령을 실행하는 수고를 덜 수 있을 것입니다.")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),t._m(28),r("p",[t._v("이제 변경 내용을 원격 서버로 발행할 수 있어요.")]),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),r("p",[t._v("아래 명령으로 master 가지로 돌아올 수 있어요.")]),t._v(" "),t._m(32),r("p",[t._v("아래 명령으로는 가지를 삭제할 수 있어요.")]),t._v(" "),t._m(33),r("p",[t._v("여러분이 새로 만든 가지를 원격 저장소로 전송하기 전까지는\n다른 사람들이 접근할 수 없어요.")]),t._v(" "),t._m(34),t._m(35),t._v(" "),r("p",[t._v("여러분의 로컬 저장소를 원격 저장소에 맞춰 갱신하려면\n아래 명령을 실행하세요.")]),t._v(" "),t._m(36),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),r("p",[t._v("다른 가지에 있는 변경 내용을 현재 가지(예를 들면, master 가지)에 병합하려면 아래 명령을 실행하세요.")]),t._v(" "),t._m(40),t._m(41),t._v(" "),t._m(42),r("p",[t._v("변경 내용을 병합하기 전에, 어떻게 바뀌었는지 비교해볼 수도 있어요.")]),t._v(" "),t._m(43),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),r("p",[t._v("게릿은 무료 웹 팀 코드 협업 도구이다. 소프트웨어 개발자가 팀에서 웹 브라우저를 사용해 소스 코드의 다른 사람의 수정 사항을 검토하거나 변경 사항을 승인 또는 거부할 수 있다. 분산 버전 관리 시스템인 Git과 밀접하게 통합된다.\n"),r("a",{attrs:{href:"https://www.gerritcodereview.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("gerrit"),r("OutboundLink")],1)]),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._m(54),t._v(" "),t._m(55),r("p",[t._v("확정본 식별자의 앞부분 일부만 입력해도 꼬리표를 붙일 수 있지만,\n그 일부분이 반드시 고유하다는 조건이 필요해요.")]),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._m(59),t._v(" "),t._m(60),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._m(65),t._v(" "),t._m(66),t._m(67),t._v(" "),t._m(68),t._m(69),t._v(" "),t._m(70),t._m(71),t._v(" "),r("p",[t._v("git의 내장 GUI")]),t._v(" "),t._m(72),r("p",[t._v("콘솔에서 git output을 컬러로 출력하기")]),t._v(" "),t._m(73),r("p",[t._v("이력(log)에서 확정본 1개를 딱 한 줄로만 표시하기")]),t._v(" "),t._m(74),r("p",[t._v("파일을 추가할 때 대화식으로 추가하기")]),t._v(" "),t._m(75),t._m(76),t._v(" "),t._m(77),r("p",[t._v(".gitignore - 파일 무시하기")]),t._v(" "),t._m(78),t._m(79),t._v(" "),t._m(80),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.git-tower.com/windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tower (OS X용)"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://www.sourcetreeapp.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Source Tree (OS X용, 무료)"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://desktop.github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub for Mac (OS X용, 무료)"),r("OutboundLink")],1),r("br")]),t._v(" "),t._m(81),t._v(" "),r("p",[r("a",{attrs:{href:"https://git-scm.com/book/ko/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"http://marklodato.github.io/visual-git-guide/index-ko.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("A Visual Git Guide"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"http://dalinaum-kr.tumblr.com/post/15516936704/git-work-flow",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 작업 흐름"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://backlog.com/git-tutorial/kr/stepup/stepup3_1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("누구나 쉽게 이해할 수 있는 Git 입문"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://rogerdudler.github.io/git-guide/index.ko.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("git 간편 안내서"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://opentutorials.org/module/3991",target:"_blank",rel:"noopener noreferrer"}},[t._v("GIT4 - SourceTree 협업"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://try.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("try git"),r("OutboundLink")],1)]),t._v(" "),t._m(82),t._v(" "),r("p",[r("a",{attrs:{href:"https://git-scm.com/book/en/v2",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"http://think-like-a-git.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Think like a git"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://help.github.com/en",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Help"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"http://marklodato.github.io/visual-git-guide/index-en.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("A Visual Git Guide"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://rogerdudler.github.io/git-guide/files/git_cheat_sheet.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("git cheat sheet"),r("OutboundLink")],1)])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git","aria-hidden":"true"}},[this._v("#")]),this._v(" git")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"설치"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#설치","aria-hidden":"true"}},[this._v("#")]),this._v(" 설치")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"작업의-흐름"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#작업의-흐름","aria-hidden":"true"}},[this._v("#")]),this._v(" 작업의 흐름")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("첫번째 나무인 "),r("code",[t._v("작업 디렉토리(Working directory)")]),t._v("는 실제 파일들로 이루어져있고,")]),t._v(" "),r("li",[t._v("두번째 나무인 "),r("code",[t._v("인덱스(Index)")]),t._v("는 준비 영역(staging area)의 역할을 하며,")]),t._v(" "),r("li",[t._v("마지막 나무인 "),r("code",[t._v("HEAD")]),t._v("는 최종 확정본(commit)을 나타내요.\n"),r("img",{attrs:{src:"https://rogerdudler.github.io/git-guide/img/trees.png",alt:"작업의 흐름"}})])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"git-저장소-만들기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-저장소-만들기","aria-hidden":"true"}},[this._v("#")]),this._v(" git 저장소 만들기")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("기존 디렉토리를 git 저장소로 만드는 방법")]),this._v(" "),e("li",[this._v("다른서버에 있는 저장소를 clone하는 방법")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"기존-디렉토리를-git-저장소로-만들기-init"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#기존-디렉토리를-git-저장소로-만들기-init","aria-hidden":"true"}},[this._v("#")]),this._v(" 기존 디렉토리를 git 저장소로 만들기 init")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git init\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ git add *.c \n$ git add README \n$ git commit -m 'initial project version'\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"기존-저장소를-clone하기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#기존-저장소를-clone하기","aria-hidden":"true"}},[this._v("#")]),this._v(" 기존 저장소를 Clone하기")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("p",[t._v("다른 프로젝트에 참여하거나(Contribute) Git 저장소를 복사하고 싶을 때 "),r("code",[t._v("git clone")]),t._v(" 명령을 사용합니다. "),r("br"),t._v(" "),r("code",[t._v("git clone")]),t._v("을 실행하면 프로젝트 히스토리를 전부 받아옵니다. "),r("br"),t._v(" "),r("code",[t._v("git clone [원격저장소url]")]),t._v(" 명령으로 저장소를 Clone합니다."),r("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git clone 원격저장소url\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git remote\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("git remote")]),this._v("로 확인해보면 remote의 별칭이 origin 으로 자동 세팅되어 있는 것이 확인됩니다."),e("br"),this._v("\n다른 디렉토리 이름으로 Clone할 수 있다")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git clone 원격저장소url 새디렉토리명\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"추가와-확정-add-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#추가와-확정-add-commit","aria-hidden":"true"}},[this._v("#")]),this._v(" 추가와 확정 add commit")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git add <파일 이름>\ngit add *\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("이것이 바로 git의 기본 작업 흐름에서 첫 단계에 해당돼요."),e("br"),this._v("\n하지만 실제로 변경 내용을 확정하려면 아래 명령을 내려야 한답니다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('git commit -m "이번 확정본에 대한 설명"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("자, 이제 변경된 파일이 HEAD에 반영됐어요."),e("br"),this._v("\n하지만, 원격 저장소에는 아직 반영이 안 됐답니다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git status\ngit status -s\ngit status --short\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('git commit -am "커밋 메시지 내용"\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"변경-내용-발행하기-push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#변경-내용-발행하기-push","aria-hidden":"true"}},[this._v("#")]),this._v(" 변경 내용 발행하기 push")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("현재의 변경 내용은 아직 로컬 저장소의 HEAD 안에 머물고 있어요."),e("br"),this._v("\n이제 이 변경 내용을 원격 서버로 올려봅시다. 아래 명령을 실행하세요.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git push origin master\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("origin")]),this._v(": 리모트 저장소 별칭, "),e("code",[this._v("master")]),this._v(" : 브랜치 를 의미합니다.\n(다른 가지를 발행하려면 master를 원하는 가지 이름으로 바꿔주세요.)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git push - u origin master\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("-u")]),this._v("는 원격저장소로부터 업데이트를 받은 후 push를 한다는 의미이므로 습관적으로 "),e("code",[this._v("-u")]),this._v(" 사용을 권장합니다."),e("br"),this._v("\n만약 기존에 있던 원격 저장소를 복제한 것이 아니라면(clone으로 만든 것이 아니라면), 원격 서버의 주소를 git에게 알려줘야 해요.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git remote add origin <원격 서버 주소>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"가지치기-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#가지치기-branch","aria-hidden":"true"}},[this._v("#")]),this._v(" 가지치기 branch")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("가지는 안전하게 격리된 상태에서 무언가를 만들 때 사용해요.\n여러분이 저장소를 새로 만들면 기본으로 "),e("strong",[this._v("master")]),this._v(" 가지가 만들어집니다.\n이제 다른 가지를 이용해서 개발을 진행하고, 나중에 개발이 완료되면\nmaster 가지로 돌아와 병합하면 돼요.\n"),e("img",{attrs:{src:"https://rogerdudler.github.io/git-guide/img/branches.png",alt:"branch"}}),this._v('\n아래 명령으로 "feature_x"라는 이름의 가지를 만들고 갈아탑니다.')])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git checkout -b feature_x\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git checkout master\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git branch -d feature_x\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git push origin <가지 이름>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"갱신과-병합-merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#갱신과-병합-merge","aria-hidden":"true"}},[this._v("#")]),this._v(" 갱신과 병합 merge")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git pull\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("이렇게 하면 원격 저장소의 변경 내용이 로컬 작업 디렉토리에 받아지고(fetch), 병합(merge)된답니다."),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"pull-vs-fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pull-vs-fetch","aria-hidden":"true"}},[this._v("#")]),this._v(" pull vs fetch")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("fetch : 원격저장소의 내용을 가져온다.\n"),e("ul",[e("li",[this._v("신중하게 작업할 때 쓰인다. fetch를 한 후, 브랜치를 따서 테스트 한 다음 로컬작업디렉토리와 병합하고 브랜치를 마스터와 병합한후 브랜치 삭제")])])]),this._v(" "),e("li",[this._v("pull : fetch 한 내용을 로컬 작업 디렉토리에 병합 작업까지 한다.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git merge <가지 이름>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("첫번째 명령이든 두번째 명령이든, git은 자동으로 변경 내용을 병합하려고 시도해요."),e("br"),this._v("\n문제는, 항상 성공하는 게 아니라 가끔 충돌(conflicts)이 일어나기도 한다는 거예요."),e("br"),this._v("\n이렇게 충돌이 발생하면, git이 알려주는 파일의 충돌 부분을 여러분이 직접 수정해서 병합이 가능하도록 해야 하죠."),e("br"),this._v("\n충돌을 해결했다면, 아래 명령으로 git에게 아까의 파일을 병합하라고 알려주세요.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git add <파일 이름>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git diff <원래 가지> <비교 대상 가지>\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"fork-pull-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fork-pull-request","aria-hidden":"true"}},[this._v("#")]),this._v(" fork pull request")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"fork"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fork","aria-hidden":"true"}},[this._v("#")]),this._v(" fork")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("github에서 맘에 드는 프로젝트로 가서 우측 상단 "),e("code",[this._v("fork")]),this._v(" 버튼을 클릭합니다."),e("br"),this._v("\nfork가 완료되면 개인 계정에 저장소가 만들어집니다.(복제됩니다)")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"pull-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pull-request","aria-hidden":"true"}},[this._v("#")]),this._v(" pull request")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("fork해서 작업한 내용을 원본 저장소에 push 하고 싶으면,"),e("br"),this._v(" "),e("code",[this._v("pull request")]),this._v(" 요청을 보냅니다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"코드리뷰"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#코드리뷰","aria-hidden":"true"}},[this._v("#")]),this._v(" 코드리뷰")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"gerrit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gerrit","aria-hidden":"true"}},[this._v("#")]),this._v(" gerrit")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"꼬리표-달기-tag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#꼬리표-달기-tag","aria-hidden":"true"}},[this._v("#")]),this._v(" 꼬리표 달기 tag")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("소프트웨어의 새 버전을 발표할 때마다 꼬리표를 달아놓으면 좋아요. (물론 꼬리표는 SVN 등에 이미 존재하는 기능이지요.)"),e("br"),this._v("\n아래 명령을 실행하면 새로운 꼬리표인 1.0.0을 달 수 있어요."),e("br")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git tag 1.0.0 1b2e1d63ff\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("위 명령에서 1b2e1d63ff 부분은 꼬리표가 가리킬 확정본 식별자입니다."),e("br"),this._v("\n아래 명령으로 확정본 식별자를 얻을 수 있어요.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git log\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"작업-취소"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#작업-취소","aria-hidden":"true"}},[this._v("#")]),this._v(" 작업 취소")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"개별파일-원복"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#개별파일-원복","aria-hidden":"true"}},[this._v("#")]),this._v(" 개별파일 원복")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git checkout  -- <파일> \n// 워킹트리의 수정된 파일을 index에 있는 것으로 원복\ngit checkout HEAD -- <파일명> \n// 워킹트리의 수정된 파일을 HEAD에 있는 것으로 원복(이 경우 --는 생략가능)\ngit checkout FETCH_HEAD -- <파일명> \n// 워킹트리의 수정된 파일의 내용을 FETCH_HEAD에 있는 것으로 원복? merge?(이 경우 --는 생략가능)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"index-추가-취소"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#index-추가-취소","aria-hidden":"true"}},[this._v("#")]),this._v(" index 추가 취소")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git reset -- <파일명> \n// 해당 파일을 index에 추가한 것을 취소(unstage). 워킹트리의 변경내용은 보존됨. (--mixed 가 default)\ngit reset HEAD <파일명> \n// 위와 동일\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"commit-취소"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-취소","aria-hidden":"true"}},[this._v("#")]),this._v(" commit 취소")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git reset HEAD^ \n// 최종 커밋을 취소. 워킹트리는 보존됨. (커밋은 했으나 push하지 않은 경우 유용)\ngit reset HEAD~2 \n// 마지막 2개의 커밋을 취소. 워킹트리는 보존됨.\ngit reset --hard HEAD~2 \n// 마지막 2개의 커밋을 취소. index 및 워킹트리 모두 원복됨.\ngit reset --hard ORIG_HEAD \n// 머지한 것을 이미 커밋했을 때,  그 커밋을 취소. (잘못된 머지를 이미 커밋한 경우 유용)\ngit revert HEAD \n// HEAD에서 변경한 내역을 취소하는 새로운 커밋 발행(undo commit). (커밋을 이미 push 해버린 경우 유용)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"워킹트리-전체-원복"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#워킹트리-전체-원복","aria-hidden":"true"}},[this._v("#")]),this._v(" 워킹트리 전체 원복")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git reset --hard HEAD \n// 워킹트리 전체를 마지막 커밋 상태로 되돌림. 마지막 커밋이후의 워킹트리와 index의 수정사항 모두 사라짐. \n                                  (변경을 커밋하지 않았다면 유용)\ngit checkout HEAD . \n// ??? 워킹트리의 모든 수정된 파일의 내용을 HEAD로 원복.\ngit checkout -f \n// 변경된 파일들을 HEAD로 모두 원복(아직 커밋하지 않은 워킹트리와 index 의 수정사항 모두 사라짐. 신규추가 파일 제외)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"참조-reset-옵션"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#참조-reset-옵션","aria-hidden":"true"}},[this._v("#")]),this._v(" 참조 : reset 옵션")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("--soft \n// index 보존, 워킹트리 보존. 즉 모두 보존.\n--mixed \n// index 취소, 워킹트리만 보존 (기본 옵션)\n--hard \n// index 취소, 워킹트리 취소. 즉 모두 취소.\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"untracked-파일-제거"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#untracked-파일-제거","aria-hidden":"true"}},[this._v("#")]),this._v(" untracked 파일 제거")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git clean -f\ngit clean -f -d \n// 디렉토리까지 제거\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"자주-사용되는-명령어"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#자주-사용되는-명령어","aria-hidden":"true"}},[this._v("#")]),this._v(" 자주 사용되는 명령어")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("$ git branch -> 로컬 branch 확인 \n$ git branch -r 서버 branch 확인 \n$ git checkout -b 브랜치명 브랜치를 만들고 바로 이동 \n$ git branch -d(D) test 브랜치 삭제 \n$ git status 현재상태(머지나 추가사항) 확인 \n$ git add 경로 에러를 해결하고 추가하여 에러해결 \n$ git stash 임시저장 \n$ git stash pop 임시저장한파일 불러오기 \n$ git remote prune origin 깃랩에서 삭제한거 서버와 동기화 \n$ git push origin :브랜치네임 서버에서 삭제하기 \n$ git remote \n$ git push origin dev \n$ git config http.postBuffer 104857600 git오류시 해결 \n$ git merge --squash dev \n$ git merge --no-ff feature- : 새로운 가지 따서 merge(관리상 용이) \n$ git clone 주소 \n$ git remote set-url origin 주소 : gitlap 저장소 변경시 설정 \n$ git remote -v : gitlap 저장소 주소 확인 // 고아 브랜치 만드는 방법 \n$ git checkout master \n$ git checkout --orphan c_YYMMDD_CAMPAIGNNAME \n$ git rm -rf . \n$ git push origin c_YYMMDD_CAMPAIGNNAME\ngit config - -global - -list // 전역 설정 정보 조회\ngit config - -list // 저장소별 설정 정보 조회\ngit config - -global color.ui “auto” // Git의 출력결과 색상 활성화하기\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"유용한-힌트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#유용한-힌트","aria-hidden":"true"}},[this._v("#")]),this._v(" 유용한 힌트")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("gitk\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git config color.ui true\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git config format.pretty oneline\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git add -i\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("아이디와 비밀번호 저장하기"),e("br"),this._v("\ngit 콘솔에서 다음과 같이 한번만 입력해 놓으면 push나 pull 등 서버에 접속하면서 팝업으로 뜨는 아이디 비밀번호창을 띄우지 않도록 아이디 및 비번을 기억하도록 할 수 있습니다.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("git config credential.helper store \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("# .gitignore\n# a comment - 이 줄은 무시한다. \n# 확장자가 .a인 파일 무시 \n*.a \n# 윗 줄에서 확장자가 .a인 파일은 무시하게 했지만 lib.a는 무시하지 않는다. \n!lib.a \n# 루트 디렉토리에 있는 TODO파일은 무시하고 subdir/TODO처럼 하위디렉토리에 있는 파일은 무시하지 않는다. \n/TODO \n# build/ 디렉토리에 있는 모든 파일은 무시한다. \nbuild/ \n# `doc/notes.txt`같은 파일은 무시하고 doc/server/arch.txt같은 파일은 무시하지 않는다. \ndoc/*.txt \n# `doc` 디렉토리 아래의 모든 .txt 파일을 무시한다. \ndoc/**/*.txt\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"링크-자료"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#링크-자료","aria-hidden":"true"}},[this._v("#")]),this._v(" 링크 & 자료")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"그래픽-클라이언트"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#그래픽-클라이언트","aria-hidden":"true"}},[this._v("#")]),this._v(" 그래픽 클라이언트")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"한글-안내서"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#한글-안내서","aria-hidden":"true"}},[this._v("#")]),this._v(" 한글 안내서")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"영문-안내서"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#영문-안내서","aria-hidden":"true"}},[this._v("#")]),this._v(" 영문 안내서")])}],!1,null,null,null);e.default=s.exports}}]);