(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{179:function(e,t,a){"use strict";a.r(t);var n=a(0),s=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"템플릿-리터럴"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#템플릿-리터럴","aria-hidden":"true"}},[e._v("#")]),e._v(" 템플릿 리터럴")]),e._v(" "),a("p",[e._v("ES6는 템플릿 리터럴(Template literal)이라고 불리는 새로운 문자열 표기법을 도입하였다. 템플릿 리터럴은 일반 문자열과 비슷해 보이지만, ‘ 또는 “ 같은 통상적인 따옴표 문자 대신 백틱(backtick) 문자 `를 사용한다.")]),e._v(" "),a("p",[e._v("\n일반적인 문자열에서 줄바꿈은 허용되지 않으며 공백(white-space)를 표현하기 위해서는 백슬래시(\\)로 시작하는 [이스케이프 시퀀스(Escape Sequence)](https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#Anchor_1)를 사용하여야 한다. ES6 템플릿 리터럴은 일반적인 문자열과 달리 여러 줄에 걸쳐 문자열을 작성할 수 있으며 템플릿 리터럴 내의 모든 white-space는 있는 그대로 적용된다.\n")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('const  template  =  `<ul class="nav-items">  \n\t<li><a href="#home">Home</a></li>  \n\t<li><a href="#news">News</a></li>  \n\t<li><a href="#contact">Contact</a></li>  \n\t<li><a href="#about">About</a></li>  \n</ul>`;  \nconsole.log(template);\n')])])]),a("p",[e._v("\n템플릿 리터럴은 + 연산자를 사용하지 않아도 간단한 방법으로 새로운 문자열을 삽입할 수 있는 기능을 제공한다. 이를 문자열 인터폴레이션(String Interpolation)이라 한다.\n")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("const  first  =  'Ung-mo';  \nconst  last  =  'Lee';  \n// ES5: 문자열 연결  \nconsole.log('My name is '  +  first  +  ' '  +  last  +  '.');  \n// \"My name is Ung-mo Lee.\"  \n// ES6: String Interpolation  \nconsole.log(`My name is ${first}  ${last}.`);  \n// \"My name is Ung-mo Lee.\"\n")])])]),a("p",[e._v("문자열 인터폴레이션은 `${ … }`으로 표현식을 감싼다. 문자열 인터폴레이션 내의 표현식은 문자열로 강제 타입 변환된다.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('console.log(`1 + 1 = ${1  +  1}`);  // "1 + 1 = 2"\n')])])])])}],!1,null,null,null);t.default=s.exports}}]);