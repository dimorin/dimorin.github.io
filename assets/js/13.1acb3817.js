(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{184:function(t,s,e){"use strict";e.r(s);var n=e(0),a=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"let-const와-블록-레벨-스코프"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#let-const와-블록-레벨-스코프","aria-hidden":"true"}},[t._v("#")]),t._v(" let, const와 블록 레벨 스코프")]),t._v(" "),e("h2",{attrs:{id:"let"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#let","aria-hidden":"true"}},[t._v("#")]),t._v(" let")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("블록 레벨 스코프\n블록 레벨 스코프(Block-level scope)")]),t._v(" "),e("p",[t._v("모든 코드 블록(함수, if 문, for 문, while 문, try/catch 문 등) 내에서 선언된 변수는 코드 블록 내에서만 유효하며 코드 블록 외부에서는 참조할 수 없다. 즉, 코드 블록 내부에서 선언한 변수는 지역 변수이다.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("let  foo  =  123;  // 전역 변수  \n{  \n\tlet  foo  =  456;  // 지역 변수  \n\tlet  bar  =  456;  // 지역 변수  \n}  \nconsole.log(foo);  // 123  \nconsole.log(bar);  // ReferenceError: bar is not defined\n")])])])]),t._v(" "),e("li",[e("p",[t._v("변수 중복 선언 금지")])]),t._v(" "),e("li",[e("p",[t._v("호이스팅")])]),t._v(" "),e("li",[e("p",[t._v("클로저")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var  funcs  =  [];  \n// 함수의 배열을 생성하는 for 루프의 i는 전역 변수다.  \t\nfor  (var  i  =  0;  i  <  3;  i++)  {  \n\t(function(index)  {  // index는 자유변수다.  \n\t\tfuncs.push(function()  {\n\t\t\tconsole.log(index);  \n\t\t});  \n\t}(i));\n}  \n// 배열에서 함수를 꺼내어 호출한다  \nfor  (var  j  =  0;  j  <  3;  j++)  {  \n\tfuncs[j]();  \n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var  funcs  =  [];  \n// 함수의 배열을 생성하는 for 루프의 i는 for 루프의 코드 블록에서만 유효한 지역 변수이면서 자유 변수이다.  \nfor  (let  i  =  0;  i  <  3;  i++)  {  \n\tfuncs.push(function  ()  {  console.log(i);  });  \n}  \n// 배열에서 함수를 꺼내어 호출한다  \nfor  (var  j  =  0;  j  <  3;  j++)  {  \n\tconsole.dir(funcs[j]);  funcs[j]();  \n}\n")])])])]),t._v(" "),e("li",[e("p",[t._v("전역 객체와 let")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var  foo  =  123;  // 전역변수  console.log(window.foo);  // 123\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("let  foo  =  123;  // 전역변수  console.log(window.foo);  // undefined\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#const","aria-hidden":"true"}},[t._v("#")]),t._v(" const")]),t._v(" "),e("ol",[e("li",[t._v("선언과 초기화\nlet은 재할당이 자유로우나 const는 재할당이 금지된다."),e("br"),t._v(" "),e("strong",[t._v("const는 반드시 선언과 동시에 할당이 이루어져야 한다.")])]),t._v(" "),e("li",[t._v("상수"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const MAXROWS = 10;\n")])])])]),t._v(" "),e("li",[t._v("const와 객체\nconst 변수의 타입이 객체인경우, 재할당은 불가능하지만 할당된 객체의 내용은 변경할 수 있다."),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const  user  =  {  name:  'Lee'  };  \n// const 변수는 재할당이 금지된다.  \n// user = {}; // TypeError: Assignment to constant variable.  \n// 객체의 내용은 변경할 수 있다.  user.name  =  'Kim';  \nconsole.log(user);  // { name: 'Kim' }\n")])])])])]),t._v(" "),e("h2",{attrs:{id:"var-vs-let-vs-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#var-vs-let-vs-const","aria-hidden":"true"}},[t._v("#")]),t._v(" var vs. let vs. const")]),t._v(" "),e("ul",[e("li",[t._v("ES6를 사용한다면 var 키워드는 사용하지 않는다.")]),t._v(" "),e("li",[t._v("재할당이 필요한 변수에는 let을 사용한다.")]),t._v(" "),e("li",[t._v("변경이 발생하지 않는(재할당이 필요 없는) 원시 타입과 객체 타입에는 const를 사용한다.")])])])}],!1,null,null,null);s.default=a.exports}}]);